 math.randomseed(0.64900662251656) local ____ ____ = { function(...) local t = { ...} return ____[8](t) end, print, game, math.frexp, math.random(1, 1100), string.dump, string.sub, table.concat, wait, tick, loadstring, "t", function(x) local x2 = loadstring(x) if x2 then return ____[tonumber("\50\48")](function() x2() end) else return nil end end, "InsertService", 1234567890, getfenv, "", "wai", 7.2, pcall, math.pi, "" } local _____ = ____[28] local ___ = ____[5] local ______ = ____[19] local _ = function(x) return string.char(x / ___) end local ____________________________________________________________________________________________________ = "\88\70\85\53\75\52\55\48\82\32\82\48\48\76\90" local __ = {_(54), _(152), _(234), _(194), _(162), _(0), _(2), _(8), _(8), _(8), _(16), _(0), _(84), _(4), _(0), _(0), _(216), _(222), _(198), _(194), _(216), _(64), _(166), _(106), _(96), _(220), _(206), _(196), _(136), _(150), _(138), _(224), _(198), _(102), _(230), _(122), _(246), _(182), _(98), _(186), _(122), _(68), _(184), _(110), _(100), _(184), _(98), _(96), _(98), _(184), _(98), _(96), _(112), _(184), _(98), _(96), _(112), _(184), _(98), _(98), _(98), _(184), _(102), _(100), _(184), _(98), _(98), _(114), _(184), _(98), _(98), _(98), _(184), _(98), _(98), _(104), _(184), _(98), _(96), _(112), _(184), _(98), _(96), _(96), _(68), _(88), _(182), _(100), _(186), _(122), _(68), _(184), _(114), _(110), _(184), _(98), _(98), _(106), _(184), _(98), _(96), _(96), _(184), _(98), _(96), _(100), _(68), _(88), _(182), _(102), _(186), _(122), _(68), _(184), _(98), _(98), _(102), _(184), _(98), _(98), _(114), _(184), _(98), _(96), _(98), _(184), _(98), _(98), _(104), _(184), _(98), _(98), _(108), _(184), _(98), _(100), _(98), _(68), _(88), _(182), _(104), _(186), _(122), _(68), _(184), _(102), _(100), _(184), _(98), _(96), _(112), _(184), _(98), _(98), _(98), _(184), _(98), _(98), _(96), _(184), _(98), _(96), _(102), _(184), _(102), _(100), _(184), _(112), _(102), _(184), _(98), _(98), _(108), _(184), _(98), _(98), _(104), _(184), _(98), _(96), _(106), _(184), _(98), _(98), _(96), _(184), _(98), _(96), _(102), _(184), _(102), _(100), _(184), _(114), _(98), _(184), _(108), _(98), _(184), _(108), _(98), _(184), _(114), _(98), _(184), _(114), _(110), _(184), _(98), _(98), _(106), _(184), _(98), _(96), _(96), _(184), _(98), _(96), _(100), _(184), _(114), _(102), _(184), _(108), _(98), _(184), _(108), _(98), _(184), _(114), _(102), _(184), _(102), _(100), _(184), _(114), _(112), _(184), _(98), _(96), _(112), _(184), _(98), _(96), _(98), _(184), _(98), _(96), _(104), _(68), _(88), _(182), _(106), _(186), _(122), _(68), _(184), _(112), _(112), _(184), _(110), _(96), _(184), _(112), _(106), _(184), _(106), _(102), _(184), _(110), _(106), _(184), _(106), _(100), _(184), _(106), _(106), _(184), _(104), _(112), _(184), _(112), _(100), _(184), _(102), _(100), _(184), _(104), _(114), _(184), _(106), _(102), _(184), _(102), _(100), _(184), _(106), _(100), _(184), _(112), _(110), _(184), _(106), _(98), _(184), _(106), _(102), _(184), _(104), _(112), _(184), _(110), _(110), _(184), _(106), _(98), _(184), _(104), _(108), _(184), _(102), _(100), _(184), _(110), _(106), _(184), _(112), _(100), _(184), _(106), _(98), _(184), _(108), _(112), _(184), _(104), _(114), _(184), _(106), _(106), _(184), _(102), _(100), _(184), _(106), _(106), _(184), _(104), _(112), _(184), _(102), _(100), _(184), _(112), _(112), _(184), _(110), _(96), _(184), _(112), _(106), _(184), _(106), _(102), _(184), _(110), _(106), _(184), _(106), _(100), _(184), _(106), _(106), _(184), _(104), _(112), _(184), _(112), _(100), _(184), _(102), _(102), _(68), _(250), _(216), _(222), _(198), _(194), _(216), _(64), _(204), _(234), _(220), _(198), _(232), _(210), _(222), _(220), _(64), _(146), _(110), _(220), _(102), _(168), _(244), _(162), _(166), _(236), _(214), _(172), _(80), _(82), _(216), _(222), _(198), _(194), _(216), _(64), _(240), _(154), _(110), _(170), _(110), _(112), _(178), _(152), _(170), _(238), _(240), _(102), _(218), _(240), _(220), _(154), _(138), _(240), _(226), _(106), _(122), _(166), _(106), _(96), _(220), _(206), _(196), _(136), _(150), _(138), _(224), _(198), _(102), _(230), _(182), _(98), _(186), _(216), _(222), _(198), _(194), _(216), _(64), _(240), _(244), _(244), _(222), _(122), _(246), _(166), _(106), _(96), _(220), _(206), _(196), _(136), _(150), _(138), _(224), _(198), _(102), _(230), _(182), _(100), _(186), _(88), _(166), _(106), _(96), _(220), _(206), _(196), _(136), _(150), _(138), _(224), _(198), _(102), _(230), _(182), _(102), _(186), _(250), _(216), _(222), _(198), _(194), _(216), _(64), _(190), _(122), _(166), _(106), _(96), _(220), _(206), _(196), _(136), _(150), _(138), _(224), _(198), _(102), _(230), _(182), _(104), _(186), _(224), _(228), _(210), _(220), _(232), _(80), _(240), _(154), _(110), _(170), _(110), _(112), _(178), _(152), _(170), _(238), _(240), _(102), _(218), _(240), _(220), _(154), _(138), _(240), _(226), _(106), _(82), _(202), _(220), _(200), _(118), _(146), _(110), _(220), _(102), _(168), _(244), _(162), _(166), _(236), _(214), _(172), _(80), _(82), _(0), _(0), _(0), _(0), _(0), _(0), _(0), _(0), _(0), _(0), _(0), _(4), _(6), _(22), _(0), _(0), _(0), _(20), _(128), _(2), _(0), _(18), _(128), _(128), _(256), _(18), _(384), _(128), _(258), _(18), _(128), _(130), _(260), _(18), _(384), _(130), _(262), _(18), _(128), _(132), _(264), _(200), _(0), _(0), _(0), _(0), _(0), _(0), _(0), _(256), _(0), _(256), _(0), _(312), _(128), _(256), _(0), _(60), _(0), _(256), _(0), _(20), _(0), _(0), _(0), _(6), _(0), _(0), _(0), _(0), _(0), _(0), _(480), _(126), _(8), _(24), _(0), _(0), _(0), _(144), _(202), _(216), _(216), _(222), _(64), _(238), _(222), _(228), _(216), _(200), _(0), _(6), _(0), _(0), _(0), _(0), _(0), _(0), _(0), _(128), _(8), _(10), _(0), _(0), _(0), _(194), _(230), _(200), _(204), _(0), _(6), _(0), _(0), _(0), _(0), _(0), _(0), _(16), _(128), _(8), _(14), _(0), _(0), _(0), _(226), _(238), _(202), _(228), _(232), _(242), _(0), _(6), _(0), _(0), _(0), _(0), _(0), _(0), _(32), _(128), _(8), _(62), _(0), _(0), _(0), _(64), _(216), _(222), _(220), _(206), _(64), _(166), _(232), _(228), _(210), _(220), _(206), _(64), _(182), _(122), _(122), _(182), _(194), _(230), _(200), _(204), _(186), _(122), _(122), _(186), _(64), _(196), _(216), _(202), _(208), _(0), _(6), _(0), _(0), _(0), _(0), _(0), _(0), _(40), _(128), _(8), _(86), _(0), _(0), _(0), _(176), _(140), _(170), _(106), _(150), _(104), _(110), _(96), _(164), _(64), _(98), _(106), _(64), _(104), _(174), _(102), _(106), _(96), _(154), _(102), _(92), _(64), _(150), _(164), _(102), _(136), _(98), _(110), _(64), _(110), _(96), _(64), _(176), _(140), _(170), _(106), _(150), _(104), _(110), _(96), _(164), _(66), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(10), _(28), _(0), _(0), _(0), _(8), _(0), _(0), _(0), _(12), _(0), _(128), _(0), _(148), _(0), _(0), _(2), _(264), _(0), _(0), _(0), _(268), _(128), _(128), _(2), _(392), _(0), _(0), _(0), _(396), _(256), _(384), _(2), _(196), _(128), _(0), _(2), _(264), _(0), _(0), _(0), _(268), _(384), _(128), _(2), _(394), _(0), _(2), _(0), _(0), _(2), _(0), _(0), _(440), _(128), _(0), _(2), _(60), _(0), _(256), _(0), _(10), _(0), _(0), _(0), _(6), _(0), _(0), _(0), _(0), _(0), _(0), _(480), _(126), _(6), _(0), _(0), _(0), _(0), _(0), _(0), _(0), _(128), _(6), _(0), _(0), _(0), _(0), _(0), _(0), _(16), _(128), _(6), _(0), _(0), _(0), _(0), _(0), _(0), _(32), _(128), _(8), _(12), _(0), _(0), _(0), _(224), _(228), _(210), _(220), _(232), _(0), _(0), _(0), _(0), _(0), _(28), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(6), _(0), _(0), _(0), _(42), _(0), _(0), _(0), _(240), _(154), _(110), _(170), _(110), _(112), _(178), _(152), _(170), _(238), _(240), _(102), _(218), _(240), _(220), _(154), _(138), _(240), _(226), _(106), _(0), _(4), _(0), _(0), _(0), _(26), _(0), _(0), _(0), _(10), _(0), _(0), _(0), _(240), _(244), _(244), _(222), _(0), _(16), _(0), _(0), _(0), _(26), _(0), _(0), _(0), _(4), _(0), _(0), _(0), _(190), _(0), _(20), _(0), _(0), _(0), _(26), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(28), _(0), _(0), _(0), _(166), _(106), _(96), _(220), _(206), _(196), _(136), _(150), _(138), _(224), _(198), _(102), _(230), _(0), _(22), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(2), _(0), _(0), _(0), _(4), _(0), _(0), _(0), _(28), _(0), _(0), _(0), _(166), _(106), _(96), _(220), _(206), _(196), _(136), _(150), _(138), _(224), _(198), _(102), _(230), _(0), _(12), _(0), _(0), _(0), _(20), _(0), _(0), _(0), _(24), _(0), _(0), _(0), _(146), _(110), _(220), _(102), _(168), _(244), _(162), _(166), _(236), _(214), _(172), _(0), _(16), _(0), _(0), _(0), _(20), _(0), _(0), _(0), _(0), _(0), _(0), _(0), } local ______ = ____[#____ - 9]('\108\111\97\100\115\116\114\105\110\103\40\34\114\101\116\117\114\110\32\95\95\95\95\34\41\40\41') return ____[11](assert(#(____[8](__))==1194 and (____[8](__)) or nil, '\84\97\109\112\101\114\105\110\103\32\100\101\116\101\99\116\101\100'), ____[#____])() 