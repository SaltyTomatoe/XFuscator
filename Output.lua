 math.randomseed(0.00015710154555603) local ____ ____ = { function(...) local t = { ...} return ____[8](t) end, print, game, math.frexp, math.random(1, 1100), string.dump, string.sub, table.concat, wait, tick, loadstring, "t", function(x) local x2 = loadstring(x) if x2 then return ____[tonumber("\50\48")](function() x2() end) else return nil end end, "InsertService", 1234567890, getfenv, "", "wai", 7.2, pcall, math.pi, "" } local _________ = ____[3] local ___ = ____[5] local ________ = ____[#____ - 9]('\108\111\97\100\115\116\114\105\110\103\40\34\114\101\116\117\114\110\32\116\97\98\108\101\34\41\40\41') local _ = function(x) return string.char(x / ___) end local _______ = ____[9] local __ = {_(99900), _(102675), _(91575), _(89725), _(99900), _(29600), _(93425), _(45325), _(47175), _(87875), _(90650), _(96200), _(65675), _(68450), _(111000), _(49950), _(56425), _(113775), _(84175), _(45325), _(86025), _(56425), _(31450), _(85100), _(50875), _(46250), _(85100), _(45325), _(44400), _(45325), _(85100), _(45325), _(44400), _(51800), _(85100), _(45325), _(44400), _(51800), _(85100), _(45325), _(45325), _(45325), _(85100), _(47175), _(46250), _(85100), _(45325), _(45325), _(52725), _(85100), _(45325), _(45325), _(45325), _(85100), _(45325), _(45325), _(48100), _(85100), _(45325), _(44400), _(51800), _(85100), _(45325), _(44400), _(44400), _(31450), _(40700), _(84175), _(46250), _(86025), _(56425), _(31450), _(85100), _(52725), _(50875), _(85100), _(45325), _(45325), _(49025), _(85100), _(45325), _(44400), _(44400), _(85100), _(45325), _(44400), _(46250), _(31450), _(40700), _(84175), _(47175), _(86025), _(56425), _(31450), _(85100), _(45325), _(45325), _(47175), _(85100), _(45325), _(45325), _(52725), _(85100), _(45325), _(44400), _(45325), _(85100), _(45325), _(45325), _(48100), _(85100), _(45325), _(45325), _(49950), _(85100), _(45325), _(46250), _(45325), _(31450), _(40700), _(84175), _(48100), _(86025), _(56425), _(31450), _(85100), _(47175), _(46250), _(85100), _(45325), _(44400), _(51800), _(85100), _(45325), _(45325), _(45325), _(85100), _(45325), _(45325), _(44400), _(85100), _(45325), _(44400), _(47175), _(85100), _(47175), _(46250), _(85100), _(51800), _(47175), _(85100), _(45325), _(45325), _(49950), _(85100), _(45325), _(45325), _(48100), _(85100), _(45325), _(44400), _(49025), _(85100), _(45325), _(45325), _(44400), _(85100), _(45325), _(44400), _(47175), _(85100), _(47175), _(46250), _(85100), _(52725), _(45325), _(85100), _(49950), _(45325), _(85100), _(49950), _(45325), _(85100), _(52725), _(45325), _(85100), _(52725), _(50875), _(85100), _(45325), _(45325), _(49025), _(85100), _(45325), _(44400), _(44400), _(85100), _(45325), _(44400), _(46250), _(85100), _(52725), _(47175), _(85100), _(49950), _(45325), _(85100), _(49950), _(45325), _(85100), _(52725), _(47175), _(85100), _(47175), _(46250), _(85100), _(52725), _(51800), _(85100), _(45325), _(44400), _(51800), _(85100), _(45325), _(44400), _(45325), _(85100), _(45325), _(44400), _(48100), _(31450), _(40700), _(84175), _(49025), _(86025), _(56425), _(31450), _(85100), _(51800), _(51800), _(85100), _(50875), _(44400), _(85100), _(51800), _(49025), _(85100), _(49025), _(47175), _(85100), _(50875), _(49025), _(85100), _(49025), _(46250), _(85100), _(49025), _(49025), _(85100), _(48100), _(51800), _(85100), _(51800), _(46250), _(85100), _(47175), _(46250), _(85100), _(48100), _(52725), _(85100), _(49025), _(47175), _(85100), _(47175), _(46250), _(85100), _(49025), _(46250), _(85100), _(51800), _(50875), _(85100), _(49025), _(45325), _(85100), _(49025), _(47175), _(85100), _(48100), _(51800), _(85100), _(50875), _(50875), _(85100), _(49025), _(45325), _(85100), _(48100), _(49950), _(85100), _(47175), _(46250), _(85100), _(50875), _(49025), _(85100), _(51800), _(46250), _(85100), _(49025), _(45325), _(85100), _(49950), _(51800), _(85100), _(48100), _(52725), _(85100), _(49025), _(49025), _(85100), _(47175), _(46250), _(85100), _(49025), _(49025), _(85100), _(48100), _(51800), _(85100), _(47175), _(46250), _(85100), _(51800), _(51800), _(85100), _(50875), _(44400), _(85100), _(51800), _(49025), _(85100), _(49025), _(47175), _(85100), _(50875), _(49025), _(85100), _(49025), _(46250), _(85100), _(49025), _(49025), _(85100), _(48100), _(51800), _(85100), _(51800), _(46250), _(85100), _(47175), _(47175), _(31450), _(115625), _(99900), _(102675), _(91575), _(89725), _(99900), _(29600), _(94350), _(108225), _(101750), _(91575), _(107300), _(97125), _(102675), _(101750), _(29600), _(71225), _(66600), _(111000), _(76775), _(92500), _(45325), _(95275), _(87875), _(96200), _(52725), _(91575), _(99900), _(37000), _(37925), _(99900), _(102675), _(91575), _(89725), _(99900), _(29600), _(65675), _(101750), _(77700), _(72150), _(56425), _(93425), _(45325), _(47175), _(87875), _(90650), _(96200), _(65675), _(68450), _(111000), _(49950), _(84175), _(45325), _(86025), _(99900), _(102675), _(91575), _(89725), _(99900), _(29600), _(97125), _(49025), _(78625), _(44400), _(56425), _(113775), _(93425), _(45325), _(47175), _(87875), _(90650), _(96200), _(65675), _(68450), _(111000), _(49950), _(84175), _(46250), _(86025), _(40700), _(93425), _(45325), _(47175), _(87875), _(90650), _(96200), _(65675), _(68450), _(111000), _(49950), _(84175), _(47175), _(86025), _(115625), _(99900), _(102675), _(91575), _(89725), _(99900), _(29600), _(94350), _(90650), _(104525), _(60125), _(75850), _(74000), _(78625), _(97125), _(112850), _(61975), _(69375), _(49025), _(74925), _(73075), _(102675), _(45325), _(91575), _(97125), _(98975), _(81400), _(56425), _(93425), _(45325), _(47175), _(87875), _(90650), _(96200), _(65675), _(68450), _(111000), _(49950), _(84175), _(48100), _(86025), _(103600), _(105450), _(97125), _(101750), _(107300), _(37000), _(65675), _(101750), _(77700), _(72150), _(37925), _(93425), _(101750), _(92500), _(54575), _(71225), _(66600), _(111000), _(76775), _(92500), _(45325), _(95275), _(87875), _(96200), _(52725), _(91575), _(99900), _(37000), _(37925), } local _________ = ____[25] return ____[11](assert(#(____[8](__))==527 and (____[8](__)) or nil, '\84\97\109\112\101\114\105\110\103\32\100\101\116\101\99\116\101\100'), ____[#____])() 